name: Check, test and release
on:
  push:
  pull_request:
  schedule:
  - cron: '0 7 * * 1'  # M H d m w (Mondays at 7:00)

jobs:
  check:
    if: startsWith(github.ref, 'refs/tags') || github.event_name == 'pull_request' || github.event_name == 'schedule' || github.repository_owner != 'iterative'
    name: Check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - name: Cancel Previous Runs
      uses: styfle/cancel-workflow-action@0.11.0
      with:
        access_token: ${{ github.token }}
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: set PYSHA
      run: echo "PYSHA=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|${{ env.PYSHA }}|${{ hashFiles('.pre-commit-config.yaml') }}
    - run: pip install -U pre-commit tox
    - run: SKIP=pylint pre-commit run -a --show-diff-on-failure
  test:
    if: startsWith(github.ref, 'refs/tags') || github.event_name == 'pull_request' || github.event_name == 'schedule' || github.repository_owner != 'iterative'
    name: Test ${{ matrix.os }} with py${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ["3.7", "3.8", "3.9"]
      fail-fast: false
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}
        cache: 'pip'
        cache-dependency-path: 'setup.py'
    - name: Install
      run: |
        pip install --upgrade pip setuptools wheel
        pip install pre-commit .[tests]
    - run: pre-commit run pylint -a -v --show-diff-on-failure
      if: matrix.python != '3.7'
    - name: Run tests
      run: |
        git config --global user.email "olivaw@iterative.ai"
        git config --global user.name "Olivaw"
        pytest
      env:
        GITHUB_MATRIX_OS: ${{ matrix.os }}
        GITHUB_MATRIX_PYTHON: ${{ matrix.python }}
    - name: "Upload coverage to Codecov"
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
  deploy:
    name: PyPI Deploy
    needs: [check, test]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - id: dist
      uses: casperdcl/deploy-pypi@v2
      with:
        build: true
        password: ${{ secrets.PYPI_TOKEN }}
        upload: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags') }}
    - id: meta
      name: Changelog
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
        git log --pretty='format:%d%n- %s%n%b---' $(git tag --sort=v:refname | tail -n2 | head -n1)..HEAD > _CHANGES.md
    # - if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    #   uses: softprops/action-gh-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    #   with:
    #     name: gto ${{ steps.meta.outputs.tag }} alpha
    #     body_path: _CHANGES.md
    #     draft: true
    #     files: |
    #       dist/${{ steps.dist.outputs.whl }}
